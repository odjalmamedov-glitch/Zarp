import gspread
from datetime import datetime

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
SPREADSHEET_URL = 'https://docs.google.com/spreadsheets/d/1npQ1h6ugPMZXxrNvngAbSsw0oiH2tT4Tx0cwPWqc_aU'

ADMIN_SHEET = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã'
SFU_SHEET = '–°–§–£'
ADMIN_PREV_SHEET = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã_prev.'
SFU_PREV_SHEET = '–°–§–£_prev.'
EMPLOYEE_LIST_SHEET = '–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤'

ADMIN_COLUMNS = [
    '–ö–æ–ª-–≤–æ —Å–∏–º-–∫–∞—Ä—Ç', '–ë–æ–Ω—É—Å –∑–∞ UCELL', '–ö–æ–ª-–≤–æ –ª–∏–º–∏—Ç–æ–≤ —Å –∫–æ—ç—Ñ—Ñ–æ–º', '–ü–ª–∞–Ω –ø–æ –ª–∏–º–∏—Ç–∞–º',
    '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –ø–æ –ª–∏–º–∏—Ç–∞–º', '–ë–æ–Ω—É—Å –∑–∞ –ª–∏–º–∏—Ç—ã', '–ö–æ–ª-–≤–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç',
    '–ü–ª–∞–Ω –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º', '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º',
    '–ë–æ–Ω—É—Å –∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º', 'SLA –ø—Ä–∏—ë–º–∫–∏', '–ü–æ–Ω–∏–∂–∞—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç SLA',
    '–û—à–∏–±–æ—á–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤', '–ü–æ–Ω–∏–∂–∞—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–æ–∑–≤—Ä–∞—Ç–æ–≤',
    '–†–µ–∑—É–ª—å—Ç–∞—Ç –í–ß–õ', '–í–ß–õ', '–ë–æ–Ω—É—Å –∑–∞ –í–ß–õ', '–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å',
    '–û–±—â–∞—è —Å—É–º–º–∞ –±–æ–Ω—É—Å–∞', '–ë–æ–Ω—É—Å + –¥–æ–ø. –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ —Ä—É–∫–∏',
    '–ì—Ä–æ—Å—Å –∏—Ç–æ–≥ –±–æ–Ω—É—Å–∞', '–ë–æ–Ω—É—Å + –¥–æ–ø. –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤ –≥—Ä–æ—Å—Å–µ'
]

SFU_COLUMNS = [
    '–ö–æ–ª-–≤–æ —Å–∏–º-–∫–∞—Ä—Ç', '–ü–ª–∞–Ω UCELL', '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –ø–æ UCELL', '–ë–æ–Ω—É—Å –∑–∞ UCELL',
    '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã —Ñ–∞–∫—Ç', '–ü–ª–∞–Ω –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º', '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –∫–∞—Ä—Ç–∞–º',
    '–ë–æ–Ω—É—Å –∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã', '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã', '–û—à–∏–±–æ—á–Ω—ã–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –±–∫',
    '–†–µ–∑—É–ª—å—Ç–∞—Ç –í–ß–õ', '–í–ß–õ', '–ë–æ–Ω—É—Å –∑–∞ –í–ß–õ', '–û–±—â–∞—è —Å—É–º–º–∞ –±–æ–Ω—É—Å–∞',
    '–ë–æ–Ω—É—Å + –¥–æ–ø. –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ —Ä—É–∫–∏', '–ì—Ä–æ—Å—Å –∏—Ç–æ–≥ –±–æ–Ω—É—Å–∞', '–ë–æ–Ω—É—Å + –¥–æ–ø. –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤ –≥—Ä–æ—Å—Å–µ'
]

# === –§–£–ù–ö–¶–ò–ò ===
def get_public_client():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—É–±–ª–∏—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ (–±–µ–∑ credentials)"""
    return gspread.public()

def open_sheet(sheet_name):
    client = get_public_client()
    spreadsheet = client.open_by_url(SPREADSHEET_URL)
    return spreadsheet.worksheet(sheet_name)

def normalize_date(date):
    if not date:
        return ''
    if isinstance(date, datetime):
        return date.strftime('%d.%m.%Y')
    return str(date).replace('/', '.').replace('-', '.').strip()

def validate_identifier(identifier):
    import re
    match = re.match(r'^(\d{2})(\d{2})(\d{4})-(\d{4,5})$', identifier)
    if not match:
        return False, None, None
    day, month, year, personnel_number = match.groups()
    hire_date = f'{day}.{month}.{year}'
    return True, personnel_number, hire_date

def get_sheet_name(role, month):
    if role == '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä':
        return ADMIN_SHEET if month == '–ù–∞—Å—Ç–æ—è—â–∏–π –º–µ—Å—è—Ü' else ADMIN_PREV_SHEET
    else:
        return SFU_SHEET if month == '–ù–∞—Å—Ç–æ—è—â–∏–π –º–µ—Å—è—Ü' else SFU_PREV_SHEET

def process_user_input(role, month, identifier):
    start_time = datetime.now()
    print(f'–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {role}, {month}, {identifier}')

    if role not in ['–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–°–§–£']:
        return '‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è —Ä–æ–ª—å. –£–∫–∞–∂–∏—Ç–µ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ "–°–§–£".'

    if month not in ['–ù–∞—Å—Ç–æ—è—â–∏–π –º–µ—Å—è—Ü', '–ü—Ä–µ–¥—ã–¥—É—â–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞']:
        return '‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –º–µ—Å—è—Ü.'

    is_valid, personnel_number, hire_date = validate_identifier(identifier)
    if not is_valid:
        return '‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (—Ñ–æ—Ä–º–∞—Ç –î–î–ú–ú–ì–ì–ì–ì-–ß–ß–ß–ß).'

    sheet_name = get_sheet_name(role, month)
    sheet = open_sheet(sheet_name)
    data = sheet.get_all_values()

    headers = data[1]
    try:
        personnel_idx = headers.index('–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä')
    except ValueError:
        return '‚ùå –û—à–∏–±–∫–∞: —Å—Ç–æ–ª–±–µ—Ü "–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä" –Ω–µ –Ω–∞–π–¥–µ–Ω.'

    # –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –ø–æ —Ç–∞–±–µ–ª—å–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
    target_row = None
    for row in data[2:]:
        if str(row[personnel_idx]).replace(' ', '') == personnel_number:
            target_row = row
            break

    if not target_row:
        return f'‚ùå –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–µ–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ {personnel_number} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.'

    columns = ADMIN_COLUMNS if role == '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' else SFU_COLUMNS
    result_lines = [
        f'üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è {role} (–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: {personnel_number}, –ú–µ—Å—è—Ü: {month})',
        f'–î–∞—Ç–∞ –Ω–∞–π–º–∞: {hire_date}',
        ''
    ]
    for col in columns:
        if col in headers:
            idx = headers.index(col)
            value = target_row[idx] if idx < len(target_row) else ''
            result_lines.append(f'{col}: {value or "0"}')

    elapsed = (datetime.now() - start_time).total_seconds() * 1000
    print(f'‚úÖ –ì–æ—Ç–æ–≤–æ –∑–∞ {elapsed:.0f} –º—Å')
    return '\n'.join(result_lines)

if __name__ == '__main__':
    role = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
    month = '–ù–∞—Å—Ç–æ—è—â–∏–π –º–µ—Å—è—Ü'
    identifier = '13102025-9224'
    print(process_user_input(role, month, identifier))

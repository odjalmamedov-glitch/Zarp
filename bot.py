import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, ContextTypes, filters
)
import pandas as pd
import requests

# === –¢–æ–∫–µ–Ω –±–æ—Ç–∞ ===
TOKEN = "8299236175:AAErk_3tfiJoN_2sQigg5VekEyPzDcxP3qg"

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ ===
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
user_state = {}

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîπ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", callback_data="admin")],
        [InlineKeyboardButton("üîπ –°–§–£", callback_data="sfu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å:", reply_markup=reply_markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ ===
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    user_id = query.from_user.id

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥–æ–ª–∂–Ω–æ—Å—Ç—å
    if data in ["admin", "sfu"]:
        user_state[user_id] = {"role": data}
        keyboard = [
            [InlineKeyboardButton("üî∏ –ù–∞—Å—Ç–æ—è—â–∏–π –º–µ—Å—è—Ü", callback_data=f"{data}_current")],
            [InlineKeyboardButton("üî∏ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞", callback_data=f"{data}_prev")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(
            text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:",
            reply_markup=reply_markup
        )
        return

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø–µ—Ä–∏–æ–¥
    if "_current" in data or "_prev" in data:
        role, period = data.split("_")
        user_state[user_id]["period"] = period
        await query.edit_message_text(
            text="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (–ø—Ä–∏–º–µ—Ä: 11202025-12450)"
        )
        return

# === –ü—Ä–∏—ë–º —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    if user_id not in user_state or "period" not in user_state[user_id]:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")
        return

    ident = update.message.text.strip()
    user_state[user_id]["ident"] = ident

    # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤–≤–æ–¥
    await update.message.reply_text(f"‚úÖ –í–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–Ω—è—Ç: {ident}\n–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è...")

    # –ó–¥–µ—Å—å –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å Google –¢–∞–±–ª–∏—Ü–µ–π
    await update.message.reply_text("‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º).")

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
